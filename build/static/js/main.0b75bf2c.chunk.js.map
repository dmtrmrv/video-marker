{"version":3,"sources":["Utils.js","Header.js","Nav.js","Button.js","Log.js","Checklist.js","Settings.js","App.js","serviceWorker.js","index.js"],"names":["formatSeconds","seconds","date","Date","setSeconds","toISOString","substr","Header","react_default","a","createElement","className","react_router_dom","to","href","Nav","exact","activeClassName","Button","props","_useState","useState","_useState2","Object","slicedToArray","activeID","setActiveID","addMarker","addMarkerEnd","timestamp","title","type","onClick","id","uniqueId","concat","Log","buttons","markers","removeMarker","resetTimer","status","toggleTimer","src_Header","src_Nav","role","react_csv","data","target","filename","aria-label","map","button","src_Button","key","marker","start","end","notes","Checklist","value","for","Settings","addButton","editButton","removeButton","onChange","e","App","setStatus","_useState3","_useState4","setTimestamp","_useState5","_useState6","setButtons","_useState7","_useState8","setMarkers","toConsumableArray","index","findIndex","o","splice","useEffect","interval","setInterval","clearInterval","react_router","path","render","src_Log","src_Checklist","src_Settings","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b75bf2c.chunk.js","sourcesContent":["const formatSeconds = (seconds) => {\n  const date = new Date(null);\n  date.setSeconds(seconds); // specify value for SECONDS here\n  return (date.toISOString().substr(11, 8));\n};\n\nexport { formatSeconds };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => (\n  <nav className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0\">\n    <Link className=\"navbar-brand col-sm-3 col-md-2 mr-0\" to=\"/\">Video Marker</Link>\n    <ul className=\"navbar-nav px-3\">\n      <li className=\"nav-item text-nowrap\">\n        <a className=\"nav-link\" href=\"https://github.com/dmtrmrv/video-marker\">v0.1.0</a>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => (\n  <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n    <div className=\"sidebar-sticky\">\n      <ul className=\"nav flex-column\">\n        <li className=\"nav-item\">\n          <NavLink exact to=\"/\" activeClassName=\"active\" className=\"nav-link\">Log</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"/settings\" activeClassName=\"active\" className=\"nav-link\">Settings</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink to=\"/checklist\" activeClassName=\"active\" className=\"nav-link\">Checklist</NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport uniqueId from 'lodash.uniqueid';\nimport { formatSeconds } from './Utils';\n\nconst Button = (props) => {\n  const [activeID, setActiveID] = useState();\n  const {\n    addMarker,\n    addMarkerEnd,\n    timestamp,\n    title,\n  } = props;\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        if (activeID) {\n          addMarkerEnd(activeID, formatSeconds(timestamp));\n          setActiveID(0);\n        } else {\n          const id = uniqueId();\n          addMarker(id, title, formatSeconds(timestamp), '', '');\n          setActiveID(id);\n        }\n      }}\n      className={`btn btn-outline-${activeID ? 'danger' : 'dark'}`}\n    >\n      {title}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { CSVLink } from 'react-csv';\n\nimport { formatSeconds } from './Utils';\nimport Header from './Header';\nimport Nav from './Nav';\nimport Button from './Button';\n\nconst Log = (props) => {\n  const {\n    addMarker,\n    addMarkerEnd,\n    buttons,\n    markers,\n    removeMarker,\n    resetTimer,\n    status,\n    timestamp,\n    toggleTimer,\n  } = props;\n\n  return (\n    <main>\n      <Header />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <Nav />\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-5 px-5\">\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-3 mb-4 border-bottom\">\n              <div className=\"d-flex flex-wrap flex-md-nowrap align-items-center\">\n                <h1 className=\"h2 mb-0 timer\">\n                  {formatSeconds(timestamp)}\n                </h1>\n                {status ? (\n                  <button type=\"button\" className=\"btn btn-sm btn-outline-danger ml-2\" onClick={() => toggleTimer()}>Stop</button>\n                ) : (\n                  <button type=\"button\" className=\"btn btn-sm btn-outline-success ml-2\" onClick={() => toggleTimer()}>Start</button>\n                )}\n                <button type=\"button\" className=\"btn btn-sm btn-outline-dark ml-2\" onClick={() => resetTimer()}>Reset</button>\n              </div>\n              <div className=\"btn-toolbar mb-2 mb-md-0\">\n                <CSVLink\n                  data={markers}\n                  className=\"btn btn-sm btn-outline-secondary\"\n                  target=\"_blank\"\n                  filename=\"video-markers.csv\"\n                >\n                  Export to CSV\n                </CSVLink>\n              </div>\n            </div>\n            <div className=\"btn-group mb-4\" role=\"group\" aria-label=\"Markers\">\n              {buttons.map(button => (\n                <Button\n                  addMarker={addMarker}\n                  addMarkerEnd={addMarkerEnd}\n                  id={button.id}\n                  key={button.id}\n                  timestamp={timestamp}\n                  title={button.title}\n                />\n              ))}\n            </div>\n            <div className=\"table-responsive\">\n              <table className=\"table \">\n                <thead className=\"thead-dark\">\n                  <tr>\n                    <th>Marker</th>\n                    <th>Start</th>\n                    <th>End</th>\n                    <th>Notes</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {markers.map(marker => (\n                    <tr key={marker.id}>\n                      <td>{marker.title}</td>\n                      <td>{marker.start}</td>\n                      <td>{marker.end}</td>\n                      <td>{marker.notes}</td>\n                      <td>\n                        <button\n                          type=\"button\"\n                          onClick={() => removeMarker(marker.id)}\n                          className=\"btn btn-outline-danger btn-sm\"\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </main>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Log;\n","import React from 'react';\nimport Header from './Header';\nimport Nav from './Nav';\n\nconst Checklist = () => (\n  <main>\n    <Header />\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <Nav />\n        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-5 px-5\">\n          <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-3 mb-4 border-bottom\">\n            <h1 className=\"h2 mb-0\">Checklist</h1>\n          </div>\n          <div>\n            <div className=\"form-check\">\n              <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n              <label className=\"form-check-label\" for=\"defaultCheck1\">\n                Tell everyone to relax.\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck2\" />\n              <label className=\"form-check-label\" for=\"defaultCheck2\">\n                Turn on <strong>Do Not Disturb</strong> mode on all devices.\n              </label>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  </main>\n);\n\nexport default Checklist;\n","import React from 'react';\n\nimport Header from './Header';\nimport Nav from './Nav';\n\n\nconst Settings = (props) => {\n  const {\n    buttons,\n    addButton,\n    editButton,\n    removeButton,\n  } = props;\n  return (\n    <main>\n      <Header />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <Nav />\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-5 px-5\">\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-3 mb-4 border-bottom\">\n              <h1 className=\"h2 mb-0\">Settings</h1>\n            </div>\n            <form>\n              {buttons.map(button => (\n                <div className=\"input-group mb-3\" key={button.id}>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    aria-label={button.title}\n                    value={button.title}\n                    onChange={e => editButton(button.id, e.target.value)}\n                  />\n                  <div className=\"input-group-append\">\n                    <button\n                      className=\"btn btn-outline-danger\"\n                      type=\"button\"\n                      onClick={() => removeButton(button.id)}\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </div>\n              ))}\n              <button type=\"button\" className=\"btn btn-primary\" onClick={addButton}>Add Marker</button>\n            </form>\n          </main>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Settings;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport uniqueId from 'lodash.uniqueid';\nimport findIndex from 'lodash.findindex';\n\nimport Log from './Log';\nimport Checklist from './Checklist';\nimport Settings from './Settings';\n\nconst App = () => {\n  const [status, setStatus] = useState(false);\n  const [timestamp, setTimestamp] = useState(0);\n  const [buttons, setButtons] = useState([\n    { id: uniqueId(), title: 'Cam 1' },\n    { id: uniqueId(), title: 'Cam 2' },\n    { id: uniqueId(), title: 'Blooper' },\n  ]);\n  const [markers, setMarkers] = useState([]);\n\n  // Toggle Timer.\n  const toggleTimer = () => {\n    setStatus(!status);\n  };\n\n  // Reset Timer.\n  const resetTimer = () => {\n    setTimestamp(0);\n    setStatus(false);\n  };\n\n  // Adds the new Button.\n  const addMarker = (id, title, start, end, notes) => {\n    setMarkers([\n      ...markers,\n      {\n        id,\n        title,\n        start,\n        end,\n        notes,\n      },\n    ]);\n  };\n\n  // Adds End Time to the Marker.\n  const addMarkerEnd = (id, end) => {\n    const index = findIndex(markers, o => o.id === id);\n    markers[index].end = end;\n    setMarkers([...markers]);\n  };\n\n  // Edits the Marker.\n  const editMarker = (id, title, start, end, notes) => {\n    const index = findIndex(markers, o => o.id === id);\n    markers[index].id = id;\n    markers[index].title = title;\n    markers[index].start = start;\n    markers[index].end = end;\n    markers[index].notes = notes;\n    setMarkers([...markers]);\n  };\n\n  // Removes the Marker.\n  const removeMarker = (id) => {\n    const index = findIndex(markers, o => o.id === id);\n    markers.splice(index, 1);\n    setMarkers([...markers]);\n  };\n\n  // Adds the new Button.\n  const addButton = () => {\n    setButtons([\n      ...buttons,\n      {\n        id: uniqueId(),\n        title: 'New Marker',\n      },\n    ]);\n  };\n\n  // Edits the Button.\n  const editButton = (id, title) => {\n    const index = findIndex(buttons, o => o.id === id);\n    buttons[index].title = title;\n    setButtons([...buttons]);\n  };\n\n  // Removes the Button.\n  const removeButton = (id) => {\n    const index = findIndex(buttons, o => o.id === id);\n    buttons.splice(index, 1);\n    setButtons([...buttons]);\n  };\n\n  // Timer Magic.\n  useEffect(() => {\n    let interval = null;\n    if (status) {\n      interval = setInterval(() => {\n        setTimestamp(timestamp => timestamp + 1);\n      }, 1000);\n    } else if (!status && timestamp !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [status, timestamp]);\n\n  return (\n    <Router>\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <Log\n            addMarker={addMarker}\n            addMarkerEnd={addMarkerEnd}\n            buttons={buttons}\n            markers={markers}\n            removeMarker={removeMarker}\n            resetTimer={resetTimer}\n            status={status}\n            timestamp={timestamp}\n            toggleTimer={toggleTimer}\n          />\n        )}\n      />\n      <Route path=\"/checklist\" render={() => <Checklist />} />\n      <Route\n        path=\"/settings\"\n        render={() => (\n          <Settings\n            buttons={buttons}\n            setButtons={setButtons}\n            addButton={addButton}\n            editButton={editButton}\n            removeButton={removeButton}\n          />\n        )}\n      />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}